# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-12 13:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('description', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CatalogIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CatalogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pr2', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='realestate.Catalog')),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fkey', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='featuredSale', to='realestate.Catalog', verbose_name='Featured For Sale')),
                ('prop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='realestate.CatalogItem')),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('description', wagtail.core.fields.RichTextField()),
                ('location', models.CharField(max_length=100)),
                ('purchase_mode', models.IntegerField(choices=[(0, 'Sale'), (1, 'Rent')])),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('num_baths', models.IntegerField()),
                ('num_beds', models.IntegerField()),
                ('lot_size', models.DecimalField(decimal_places=3, max_digits=20)),
                ('floor_area', models.DecimalField(decimal_places=3, max_digits=20)),
                ('listed_date', models.DateField(verbose_name='Listed Date')),
                ('furnishing_status', models.IntegerField()),
                ('build_year', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ListingFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('prop', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='realestate.Listing')),
            ],
        ),
        migrations.CreateModel(
            name='ListingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='uploads/%Y/%m/%d/')),
                ('description', models.CharField(blank=True, max_length=250)),
                ('pr2', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='realestate.Listing')),
            ],
        ),
        migrations.CreateModel(
            name='ListingIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('description', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ListingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListingTypeIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SimilarListings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fkey', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarListing', to='realestate.Listing')),
                ('prop', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, to='realestate.Listing')),
            ],
        ),
        migrations.AddField(
            model_name='listingtype',
            name='p',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='listing_types', to='realestate.ListingTypeIndex'),
        ),
        migrations.AddField(
            model_name='listing',
            name='property_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='realestate.ListingType'),
        ),
        migrations.AddField(
            model_name='catalogitem',
            name='prop',
            field=models.ManyToManyField(db_column='fk_propertyid', to='realestate.Listing'),
        ),
        migrations.AlterUniqueTogether(
            name='similarlistings',
            unique_together=set([('fkey', 'prop')]),
        ),
    ]
